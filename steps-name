func RunNamingTestsAcrossEndpoints(ctx *common.AtlasScenarioContext, logging *scenario_logging.ScenarioLogger) {
    config := GetScenarioConfig(ctx)
    raw := config.Get(scenario_vars.NamingEndpoint)

    urls, ok := raw.([]interface{})
    if !ok {
        logging.Error(fmt.Sprintf("‚ùå Failed to parse %q from config ‚Äî expected a list of URLs", scenario_vars.NamingEndpoint))
        return
    }

    for _, u := range urls {
        urlStr, ok := u.(string)
        if !ok {
            logging.Warn("‚ö†Ô∏è Skipping a non-string URL in naming-api-endpoint")
            continue
        }

        logging.Info(fmt.Sprintf("üîÅ Running Naming tests for: %s", urlStr))
        shared_state.SetSharedState(ctx, "activeNamingEndpoint", urlStr)

        registerNamingStepBindings(ctx, logging)
    }
}

func NamingSteps(ctx *common.AtlasScenarioContext, logging *scenario_logging.ScenarioLogger) {
    RunNamingTestsAcrossEndpoints(ctx, logging)
}
baseURL := shared_state.GetSharedState(ctx).Get("activeNamingEndpoint").(string)
