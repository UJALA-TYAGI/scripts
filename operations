Absolutely! Here's the updated and **Markdown-formatted** documentation for the **List Resources** operation in the **Atlas 2.0 environment**, with the **field descriptions section removed** as requested:

---

# üìò Atlas 2.0 API Resource Operations

This document serves as a comprehensive guide to interact with resources in the **Atlas 2.0 environment**. The APIs exposed here follow Kubernetes-style conventions and enable users to manage domain-specific resources such as AWS boundaries through standard operations like **list**, **create**, **update**, and **delete**.

All resources are namespaced, and each operation requires specifying the appropriate **API group**, **resource kind**, and **namespace**.

---

Got it! You want a **single combined section** that clearly lists:

* The **available API groups**
* Which **resource kinds** each API group supports (more precise mapping)

Here‚Äôs a neat, clear Markdown section that does exactly that ‚Äî structured so users immediately see what resources belong to which API groups.

---

## üß≠ API Groups and Supported Resources

The Atlas 2.0 environment exposes multiple API groups, each corresponding to a specific domain. Each API group supports one or more resource kinds as outlined below:

| API Group                                    | Supported Resource Kinds                                                                  |
| -------------------------------------------- | ----------------------------------------------------------------------------------------- |
| `portfolio.wholesale.atlas.aws.jpmchase.net` | `awspb` (AWS Portfolio Boundaries)                                                        |
| `marketplace.retail.atlas.aws.jpmchase.net`  | `awsmktpwb` (AWS Marketplace Workload Boundaries)                                         |
| `network.wholesale.atlas.aws.jpmchase.net`   | `awsnb` (AWS Network Boundaries), <br> `awssharedvpcendpoints` (AWS Shared VPC Endpoints) |
| `workload.wholesale.atlas.aws.jpmchase.net`  | `awsworkloadboundaries` (AWS Workload Boundaries)                                         |

---

# ‚úÖ Operation: List Resources

## üìÑ Overview

Use this API operation to retrieve all existing resources of a particular kind within a specific namespace. This helps users inspect the current state of resources managed under Atlas 2.0.

---

## üîó Endpoint

```
GET /apis/<API_GROUP>/v1alpha1/namespaces/<NAMESPACE>/<RESOURCE_KIND>
```

---

## üî∏ Path Parameters

| Parameter         | Required | Description                                           |
| ----------------- | -------- | ----------------------------------------------------- |
| `<API_GROUP>`     | ‚úÖ        | One of the supported API groups listed above          |
| `<NAMESPACE>`     | ‚úÖ        | Kubernetes namespace where the resources are deployed |
| `<RESOURCE_KIND>` | ‚úÖ        | One of: `awspb`, `awsnb`, or `awsmktpwb`              |

---

## üßæ Required Headers

```http
Authorization: Bearer <your-auth-token>
Content-Type: application/json
```

---

## üåê Sample Request URLs

```
GET https://<BASE_URL>/apis/portfolio.wholesale.atlas.aws.jpmchase.net/v1alpha1/namespaces/dev/awspb

GET https://<BASE_URL>/apis/network.wholesale.atlas.aws.jpmchase.net/v1alpha1/namespaces/test/awsnb

GET https://<BASE_URL>/apis/marketplace.retail.atlas.aws.jpmchase.net/v1alpha1/namespaces/prod/awsmktpwb
```

---

## ‚úÖ Success Response

**Status Code:** `200 OK`
**Content-Type:** `application/json`

```json
{
  "apiVersion": "v1",
  "items": [
    {
      "metadata": {
        "name": "sample-resource",
        "namespace": "dev"
      },
      "spec": {
        // resource-specific configuration
      }
    }
  ],
  "kind": "List",
  "metadata": {
    "resourceVersion": "123456"
  }
}
```

---

Let me know when you're ready to proceed to the **Create Resource** operation, and I‚Äôll maintain the same style and clarity.
